// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestDelegations.DBContext;

namespace RestDelegations.Migrations
{
    [DbContext(typeof(RestDelegationsContext))]
    partial class RestDelegationsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestDelegations.Entities.Delegation", b =>
                {
                    b.Property<int>("DelegationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TravelBackEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TravelBackStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TravelToEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TravelToStart")
                        .HasColumnType("datetime2");

                    b.HasKey("DelegationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Delegations");

                    b.HasData(
                        new
                        {
                            DelegationId = 1,
                            Code = "Z64",
                            Company = "VolksWagen",
                            Country = "Germany",
                            EmployeeId = 1,
                            Status = "Confirmed",
                            TravelBackEnd = new DateTime(2019, 2, 2, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelBackStart = new DateTime(2019, 2, 2, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToEnd = new DateTime(2018, 12, 10, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToStart = new DateTime(2018, 12, 10, 7, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DelegationId = 2,
                            Code = "Z66",
                            Company = "VolksWagen",
                            Country = "Spain",
                            EmployeeId = 1,
                            Status = "Confirmed",
                            TravelBackEnd = new DateTime(2018, 12, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelBackStart = new DateTime(2018, 12, 2, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToEnd = new DateTime(2015, 8, 11, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToStart = new DateTime(2015, 8, 10, 7, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DelegationId = 3,
                            Code = "Z68",
                            Company = "Opel",
                            Country = "Spain",
                            EmployeeId = 2,
                            Status = "Confirmed",
                            TravelBackEnd = new DateTime(2017, 4, 23, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelBackStart = new DateTime(2017, 4, 22, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToEnd = new DateTime(2017, 4, 11, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToStart = new DateTime(2017, 4, 10, 7, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DelegationId = 4,
                            Code = "Z69",
                            Company = "Skoda",
                            Country = "Czech Republic",
                            EmployeeId = 3,
                            Status = "Confirmed",
                            TravelBackEnd = new DateTime(2016, 7, 2, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelBackStart = new DateTime(2016, 7, 2, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToEnd = new DateTime(2016, 5, 10, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            TravelToStart = new DateTime(2016, 5, 10, 7, 15, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestDelegations.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBirth = new DateTime(1990, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2011, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adam",
                            Salary = 3500m,
                            Surname = "Sahara"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBirth = new DateTime(1992, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2014, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sebastian",
                            Salary = 4000m,
                            Surname = "Kałamarz"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfBirth = new DateTime(1985, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2008, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Feliks",
                            Salary = 5500m,
                            Surname = "Stasiak"
                        });
                });

            modelBuilder.Entity("RestDelegations.Entities.Delegation", b =>
                {
                    b.HasOne("RestDelegations.Entities.Employee", "Employee")
                        .WithMany("Delegations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RestDelegations.Entities.Employee", b =>
                {
                    b.Navigation("Delegations");
                });
#pragma warning restore 612, 618
        }
    }
}
